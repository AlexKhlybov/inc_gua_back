# Generated by Django 3.1 on 2021-09-07 18:34

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('entity', '0016_auto_20210824_1405'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_series', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Значение должно содержать только цифры'), django.core.validators.MinLengthValidator(4), django.core.validators.MaxLengthValidator(4)], verbose_name='Серия паспорта')),
                ('passport_number', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Значение должно содержать только цифры'), django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)], verbose_name='Номер паспорта')),
                ('department_code', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Значение должно содержать только цифры'), django.core.validators.MinLengthValidator(6), django.core.validators.MaxLengthValidator(6)], verbose_name='Код подразделения')),
                ('collect_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('collect_by_whom', models.CharField(blank=True, max_length=200, verbose_name='Кем выдан')),
                ('registration_address', models.CharField(blank=True, max_length=400, verbose_name='Адрес регистрации')),
                ('citizenship', models.CharField(blank=True, max_length=400, verbose_name='Гражданство')),
                ('last_name', models.CharField(blank=True, max_length=150, validators=[django.core.validators.RegexValidator('^[a-zA-Zа-яА-ЯёЁ-]*$', 'Специальные символы не допускаются, за исключением "-"'), django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(22)], verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=150, validators=[django.core.validators.RegexValidator('^[a-zA-Zа-яА-ЯёЁ-]*$', 'Специальные символы не допускаются, за исключением "-"'), django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(22)], verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=150, validators=[django.core.validators.RegexValidator('^[a-zA-Zа-яА-ЯёЁ-]*$', 'Специальные символы не допускаются, за исключением "-"'), django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(22)], verbose_name='Отчество')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('birth_place', models.CharField(blank=True, max_length=300, verbose_name='Место рождения')),
            ],
            options={
                'verbose_name': 'Физическое лицо',
                'verbose_name_plural': 'Физические лица',
            },
        ),
        migrations.RemoveField(
            model_name='beneficiary',
            name='inn',
        ),
        migrations.RemoveField(
            model_name='beneficiary',
            name='okved',
        ),
        migrations.RemoveField(
            model_name='beneficiary',
            name='region',
        ),
        migrations.RemoveField(
            model_name='beneficiary',
            name='registration_address',
        ),
        migrations.RemoveField(
            model_name='beneficiary',
            name='registration_date',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='birth_date',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='birth_place',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='citizenship',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='collect_by_whom',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='collect_date',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='department_code',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='first_name',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='inn',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='last_name',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='okved',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='passport_number',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='passport_series',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='patronymic',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='region',
        ),
        migrations.RemoveField(
            model_name='principal',
            name='registration_address',
        ),
        migrations.CreateModel(
            name='LegalEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='Название')),
                ('type', models.CharField(choices=[('Индивидуальный предприниматель', 'Индивидуальный предприниматель'), ('Юридическое лицо', 'Юридическое лицо')], default=('Юридическое лицо', 'Юридическое лицо'), max_length=100, verbose_name='Тип')),
                ('taxation', models.CharField(choices=[('ОСН', 'ОСН'), ('УСН', 'УСН'), ('ЕСХР', 'ЕСХР'), ('ЕНВД', 'ЕНВД'), ('ПСН', 'ПСН')], default=('ОСН', 'ОСН'), max_length=100, verbose_name='Налогообложение')),
                ('inn', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Значение должно содержать только цифры'), django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)], verbose_name='ИНН')),
                ('kpp', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Значение должно содержать только цифры'), django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)], verbose_name='КПП')),
                ('registration_date', models.DateField(blank=True, null=True, verbose_name='Дата регистрации')),
                ('registration_address', models.CharField(blank=True, max_length=400, verbose_name='Адрес регистрации')),
                ('actual_address', models.CharField(blank=True, max_length=400, verbose_name='Фактический адрес')),
                ('okved', models.CharField(max_length=1024, verbose_name='ОКВЭД (Основные)')),
                ('region', models.CharField(max_length=128, verbose_name='Регион')),
                ('opf', models.CharField(blank=True, max_length=256, verbose_name='Организационно-правовая форма')),
                ('evarage_number_of_employees', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=32, verbose_name='Среднесписочная численность')),
                ('statutory_document', models.CharField(blank=True, max_length=256, null=True, verbose_name='Подтверждение (устав, доверенность)')),
                ('bank_number', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Значение должно содержать только цифры'), django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)], verbose_name='Банковский счет')),
                ('bank_name', models.CharField(default='', max_length=128, verbose_name='Название банка')),
                ('bank_inn', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Значение должно содержать только цифры'), django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)], verbose_name='ИНН банка')),
                ('bank_bik', models.CharField(blank=True, max_length=264, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Значение должно содержать только цифры'), django.core.validators.MinLengthValidator(9), django.core.validators.MaxLengthValidator(9)], verbose_name='БИК банка')),
                ('bank_kpp', models.CharField(blank=True, max_length=264, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Значение должно содержать только цифры'), django.core.validators.MinLengthValidator(9), django.core.validators.MaxLengthValidator(9)], verbose_name='КПП банка')),
                ('bank_correspondent_account_cb', models.CharField(blank=True, max_length=264, validators=[django.core.validators.RegexValidator('^[0-9]*$', 'Значение должно содержать только цифры'), django.core.validators.MinLengthValidator(20), django.core.validators.MaxLengthValidator(20)], verbose_name='Корреспондентский счет в ЦБ')),
                ('eio_date', models.DateField(blank=True, null=True, verbose_name='Дата назначения ЕИО')),
                ('lpr_post', models.CharField(default='', max_length=128, verbose_name='Должность ЛПР')),
                ('auditor_opinion', models.CharField(default='', max_length=128, verbose_name='Мнение аудитора')),
                ('auditor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='legal_entity_auditor', to='entity.person', verbose_name='Аудитор')),
                ('eio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='legal_entity_eio', to='entity.person', verbose_name='Единоличный исполнительный орган')),
                ('fl', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='legal_entity_fl', to='entity.person', verbose_name='Физическое лицо')),
                ('lpr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='legal_entity_lpr', to='entity.person', verbose_name='Лицо, принимающее решения')),
            ],
            options={
                'verbose_name': 'Юридическое лицо / ИП',
                'verbose_name_plural': 'Юридические лица / ИП',
            },
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='legal_entity',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='beneficiary_legal_entity', to='entity.legalentity', verbose_name='ЮЛ/ИП'),
        ),
        migrations.AddField(
            model_name='principal',
            name='legal_entity',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='principal_legal_entity', to='entity.legalentity', verbose_name='ЮЛ/ИП'),
        ),
    ]
